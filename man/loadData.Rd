% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loadData.R
\name{vcfToCounts}
\alias{vcfToCounts}
\alias{vcfToCounts_simulation}
\alias{parseVcfFile}
\alias{parseCnaFile}
\alias{parsePurityFile}
\alias{annotateCn}
\alias{getVcaf}
\alias{checkVcaf}
\alias{vcafConstruction}
\alias{getTrinuc}
\alias{getBinCounts}
\title{\code{vcfToCounts} Take an input vcf file and annotation and generate the counts data}
\usage{
vcfToCounts(vcfFile, cnaFile = NULL, purity = 1, binSize = 100,
  context = generateContext(c("CG", "TA")),
  refGenome = BSgenome.Hsapiens.UCSC.hg19::BSgenome.Hsapiens.UCSC.hg19)

vcfToCounts_simulation(vcfFile, mutTypesFile, cnaFile = NULL,
  purity = 1, context = generateContext(c("CG", "TA")),
  refGenome = BSgenome.Hsapiens.UCSC.hg19::BSgenome.Hsapiens.UCSC.hg19,
  binSize = 100, saveIntermediate = F, intermediateFile = NULL)

parseVcfFile(vcfFile, cutoff = 10000,
  refGenome = BSgenome.Hsapiens.UCSC.hg19::BSgenome.Hsapiens.UCSC.hg19)

parseCnaFile(cnaFile)

parsePurityFile(purityFile)

annotateCn(vcf, cnaGR = NULL)

getVcaf(vcf, purity, cna, refGenome)

vcafConstruction(vcf, refGenome)

getTrinuc(vcaf, refGenome)

getBinCounts(vcaf, binSize, context)
}
\arguments{
\item{vcfFile}{path to variant calling format (VCF) file}

\item{cnaFile}{path to copy number abberation (CNA) file}

\item{purity}{sample purity percentage between 0 and 1}

\item{binSize}{size of TrackSig timeline bins}

\item{context}{list of mutation types and their trinucleotide context}

\item{refGenome}{refrence genome used to create VCF file}

\item{intermediateFile}{file where to save intermediate results if saveIntermediate is True}

\item{vcf}{CollapsedVCF object}

\item{cna}{GRanges object with cna information for the sample}

\item{vcaf}{vcaf data frame}

\item{purity}{sample purity percentage between 0 and 1}

\item{refGenome}{reference BSgenome to use}

\item{refGenome}{reference BSgenome to use}

\item{vcaf}{vcaf data frame}

\item{refGenome}{reference BSgenome to use}

\item{vcaf}{vcaf data frame}

\item{binSize}{number of mutations per bin}

\item{context}{trinucleotide combinations possible}
}
\value{
A vcaf dataframe that has vcf and vaf data concatenated

A vcaf dataframe that has vcf and vaf data concatenated

An updated vcaf data frame with trinucleotide context added for each mutation

A data frame of summary statistics and mutation type counts for each bin.
}
\description{
\code{vcfToCounts} Take an input vcf file and annotation and generate the counts data

\code{vcfToCounts_simulation} Man placeholder

\code{getVcaf} Take an input vcf file and annotation and make vaf data

\code{checkVcaf} Perform some shallow input checks on a vcaf data frame. \cr
Check for SNP criteria, and remove instances where reference allele matches alt allele.\cr
Check chromosome and position is valid in reference genome.

\code{getTrinuc} Get the trinucleotide context for each mutation in a vcaf data frame

\code{getBinCounts} Get the mutation type counts data for a vcaf dataframe
}
